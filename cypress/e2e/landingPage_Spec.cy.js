describe("will display a home page with some initial data", () => {
  beforeEach(() => {
    cy.intercept('GET', 'http://localhost:3001/api/v1/orders', {
      statusCode: 200,
      fixture: "testOrders.json"
    }).as('someOrders')

    cy.visit('http://localhost:3000/')
  });

  it("should have a header with an input and ingredient choices", () => {
    cy.wait('@someOrders')
    .get('header').contains('Burrito Builder')
    .get('form').should('exist')
    .get('.App > header > form > input').should('exist')
    .get('.App > header > form > input').should('be.visible')
    .get('.App > header > form > [name="beans"]').should('exist')
    .get('.App > header > form > [name="beans"]').contains('beans')
    .get('.App > header > form > [name="steak"]').should('exist')
    .get('.App > header > form > [name="steak"]').contains('steak')
    .get('.App > header > form > [name="carnitas"]').should('exist')
    .get('.App > header > form > [name="carnitas"]').contains('carnitas')
    .get('.App > header > form > [name="sofritas"]').should('exist')
    .get('.App > header > form > [name="sofritas"]').contains('sofritas')
    .get('.App > header > form > [name="lettuce"]').should('exist')
    .get('.App > header > form > [name="lettuce"]').contains('lettuce')
    .get('.App > header > form > [name="queso fresco"]').should('exist')
    .get('.App > header > form > [name="queso fresco"]').contains('queso fresco')
    .get('.App > header > form > [name="pico de gallo"]').should('exist')
    .get('.App > header > form > [name="pico de gallo"]').contains('pico de gallo')
    .get('.App > header > form > [name="hot sauce"]').should('exist')
    .get('.App > header > form > [name="hot sauce"]').contains('hot sauce')
    .get('.App > header > form > [name="guacamole"]').should('exist')
    .get('.App > header > form > [name="guacamole"]').contains('guacamole')
    .get('.App > header > form > [name="jalapenos"]').should('exist')
    .get('.App > header > form > [name="jalapenos"]').contains('jalapenos')
    .get('.App > header > form > [name="cilantro"]').should('exist')
    .get('.App > header > form > [name="cilantro"]').contains('cilantro')
    .get('.App > header > form > [name="sour cream"]').should('exist')
    .get('.App > header > form > [name="sour cream"]').contains('sour cream')
    .get('.App > header > form > p').should('exist')
    .get('.App > header > form > p').contains('Order: Nothing selected')
    .get('.App > header > form > :nth-child(15').should('exist')
    .get('.App > header > form > :nth-child(15').contains('Submit Order')
  });

  it('should have some orders displayed', () => {
    cy.wait('@someOrders')
    .get('section > :nth-child(1)').should('exist')
    .get('section > :nth-child(1) > h3').contains('Johnny Test')
    .get('section > :nth-child(1) > .ingredient-list').should('exist')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(1)').should('exist')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(1)').contains('TEST VEGGIE')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(2)').should('exist')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(2)').contains('TEST VEGGIE')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(3)').should('exist')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(3)').contains('TEST SAUCE')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(4)').should('exist')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(4)').contains('TEST MEAT')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(5)').should('exist')
    .get('section > :nth-child(1) > .ingredient-list > :nth-child(5)').contains('NUTHER TEST MEAT')

    .get('section > :nth-child(2)').should('exist')
    .get('section > :nth-child(2) > h3').contains('Jimmy Query')
    .get('section > :nth-child(2) > .ingredient-list').should('exist')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(1)').should('exist')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(1)').contains('TEST VEGGIE')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(2)').should('exist')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(2)').contains('TEST VEGGIE')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(3)').should('exist')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(3)').contains('TEST SAUCE')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(4)').should('exist')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(4)').contains('TEST MEAT')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(5)').should('exist')
    .get('section > :nth-child(2) > .ingredient-list > :nth-child(5)').contains('NUTHER TEST MEAT')

    .get('section > :nth-child(3)').should('exist')
    .get('section > :nth-child(3) > h3').contains('Emerald Exam')
    .get('section > :nth-child(3) > .ingredient-list').should('exist')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(1)').should('exist')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(1)').contains('TEST VEGGIE')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(2)').should('exist')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(2)').contains('TEST VEGGIE')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(3)').should('exist')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(3)').contains('TEST SAUCE')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(4)').should('exist')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(4)').contains('TEST MEAT')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(5)').should('exist')
    .get('section > :nth-child(3) > .ingredient-list > :nth-child(5)').contains('NUTHER TEST MEAT')
  })
});
